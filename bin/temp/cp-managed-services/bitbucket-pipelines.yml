# This is pipeline file
pipelines:
  branches:
    develop:
    - step:
        name: Gradle Build
        image: gradle:jdk11
        caches:
          - gradle
        script:
          - gradle build -x test --stacktrace
        artifacts:
          - build/libs/**
    - step:
        services:
         - docker
        name: Build Docker Image
        image: atlassian/pipelines-awscli
        script:
          - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 537972007847.dkr.ecr.us-east-2.amazonaws.com

          - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

          - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_ECR_REPO_URL/$DOCKER_IMAGE_NAME:latest

          - docker push $DOCKER_ECR_REPO_URL/$DOCKER_IMAGE_NAME:latest
          
    - step:
       name: Run the backend service
       script:
         - pipe: atlassian/ssh-run:0.4.0
           variables:
             SSH_USER: $EC2_USER
             SERVER: $SERVER_IP
             COMMAND: './deploy.sh managed-service'
    qa:
    - step:
        name: Gradle Build
        image: gradle:jdk11
        caches:
          - gradle
        script:
          - gradle build -x test --stacktrace
        artifacts:
          - build/libs/**
    - step:
        services:
         - docker
        name: Build Docker Image
        image: atlassian/pipelines-awscli
        script:
          - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 537972007847.dkr.ecr.us-east-2.amazonaws.com

          - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

          - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_ECR_REPO_URL/$DOCKER_IMAGE_NAME:qa

          - docker push $DOCKER_ECR_REPO_URL/$DOCKER_IMAGE_NAME:qa
          
    - step:
       name: Run the backend service
       script:
         - pipe: atlassian/ssh-run:0.4.0
           variables:
             SSH_USER: $EC2_USER
             SERVER: $SERVER_IP
             COMMAND: './deploy-qa.sh  managed-service'